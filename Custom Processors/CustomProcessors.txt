Creating Custom proccessors:
-------------------
--Test Java and mvn version on your machine from CMD prompt
>java -version
C:\Users\Win10\NewProcessor\SCC-processors>java -version
java version "1.8.0_221"
Java(TM) SE Runtime Environment (build 1.8.0_221-b11)
Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)
  
>mvn -version
C:\Users\Win10\NewProcessor\SCC-processors>mvn -version
Apache Maven 3.6.1 (d66c9c0b3152b2e69ee9bac180bb8fcc8e6af555; 2019-04-04T21:00:29+02:00)
Maven home: C:\Users\Win10\Downloads\apache-maven-3.6.1-bin\apache-maven-3.6.1\bin\..
Java version: 1.8.0_221, vendor: Oracle Corporation, runtime: C:\Program Files\Java\jdk1.8.0_221\jre
Default locale: en_US, platform encoding: Cp1252
OS name: "windows 10", version: "10.0", arch: "amd64", family: "windows"

[My paths:
 MAVEN_HOME=C:\Users\Win10\Downloads\apache-maven-3.6.1-bin\apache-maven-3.6.1
 JAVA_HOME=C:\Program Files\Java\jdk1.8.0_221
]

--create a directory
>mkdir NewProcessor
>cd NewProcessor
C:\Users\Win10\NewProcessor>
>C:\Users\Win10\NewProcessor>mvn archetype:generate
--narrow down to nifi i.e. type <nifi>
--make a choice i.e. for remote archetype type <1>
--choose archetype version i.e. type <4>
--groupId: scc
--artifactId: SCC-processors
--version: 1.0
--artifactBaseName: demo
--shows package name : scc.processors.demo <enter> <Y>
--Let the build complete.

Now looking in directories
 Directory of C:\Users\Win10\NewProcessor\SCC-processors\nifi-demo-processors\src\main\java\scc\processors\demo

11/07/2019  04:08 AM    <DIR>          .
11/07/2019  04:08 AM    <DIR>          ..
11/07/2019  04:15 AM             3,710 MyProcessor.java

This code generated by maven is Nifi compliant.
It created a class called MyProcessor,
property for the processor "My_Property",
relationship to be used for flowfile "my_relationship"

Look in Git for the Code

Look at the onTrigger class (this is where actual logic is and takes care of action on flowfile when
it comes into the processor)
Add code to terminate the relationship

        // TODO implement
	System.out.println("Received a flow file");
	session.transfer(flowFile, MY_RELATIONSHIP);

--now change to processor directory
C:\Users\Win10\NewProcessor\SCC-processors>mvn clean install
[INFO] Scanning for projects...
[INFO] Inspecting build with total of 3 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 3 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO]
[INFO] SCC-processors                                                     [pom]
[INFO] nifi-demo-processors                                               [jar]
[INFO] nifi-demo-nar                                                      [nar]
[INFO]
[INFO] -------------------------< scc:SCC-processors >-------------------------
[INFO] Building SCC-processors 1.0                                        [1/3]
[INFO] --------------------------------[ pom ]---------------------------------
....
....
....
....
....
[INFO] Installing C:\Users\Win10\NewProcessor\SCC-processors\nifi-demo-nar\pom.xml to C:\Users\Win10\.m2\repository\scc\nifi-demo-nar\1.0\nifi-demo-nar-1.0.pom
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for SCC-processors 1.0:
[INFO]
[INFO] SCC-processors ..................................... SUCCESS [  9.091 s]
[INFO] nifi-demo-processors ............................... SUCCESS [  4.203 s]
[INFO] nifi-demo-nar ...................................... SUCCESS [  1.082 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  16.083 s
[INFO] Finished at: 2019-11-07T06:33:05+01:00
[INFO] ------------------------------------------------------------------------

copy the 
C:\Users\Win10\NewProcessor\SCC-processors\nifi-demo-nar\target/*.nar

copy the nar to your NIFI_HOME/lib/ (to all nodes if cluster)
start nifi
search for processor --MyProcessor

#creating a flow using our new processor
--add generateFlowFile
  <connect>
--add MyProcessor (update property value here)
  <connect>
--add logAttribute
  <autoterminate on success>
--Test the flow

===================
Creating a new Processor: FileSizeFilter
It will accept a flowfile and accepts an attribute .
This will find if size of received flowfile is less than attribute , then the flowfile will be passed
to success or fail it.

Look in Git for the Code

Test it...






